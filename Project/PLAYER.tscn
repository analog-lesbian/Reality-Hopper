[gd_scene load_steps=28 format=2]

[ext_resource path="res://PLAYER.gd" type="Script" id=1]
[ext_resource path="res://Filesystem/HUD/PULSE_2.png" type="Texture" id=2]
[ext_resource path="res://Filesystem/HUD/PULSE_1.png" type="Texture" id=3]
[ext_resource path="res://Filesystem/HUD/PULSE_3.png" type="Texture" id=4]
[ext_resource path="res://PULSE_UI.gd" type="Script" id=5]
[ext_resource path="res://Control.gd" type="Script" id=6]
[ext_resource path="res://addons/shaderV/uv/animated/distortionUVAnimated.gd" type="Script" id=7]
[ext_resource path="res://Filesystem/HUD/RELAXED_1.png" type="Texture" id=8]
[ext_resource path="res://Filesystem/HUD/RELAXED_2.png" type="Texture" id=9]
[ext_resource path="res://Filesystem/HUD/RELAXED_3.png" type="Texture" id=10]

[sub_resource type="BoxShape" id=1]

[sub_resource type="Environment" id=2]
ambient_light_color = Color( 1, 1, 1, 1 )

[sub_resource type="VisualShader" id=15]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Output:0

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -282, 76 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 500, 140 )

[sub_resource type="ShaderMaterial" id=16]
shader = SubResource( 15 )

[sub_resource type="VisualShader" id=18]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Output:0

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -282, 76 )
mode = 1
flags/light_only = false

[sub_resource type="ShaderMaterial" id=19]
shader = SubResource( 18 )

[sub_resource type="VisualShaderNodeTexture" id=5]
source = 2
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeCustom" id=6]
output_port_for_preview = 0
default_input_values = [ 1, 10, 2, 0, 3, 0.02, 4, 0, 5, 1, 6, 0 ]
script = ExtResource( 7 )

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "time"

[sub_resource type="VisualShader" id=8]
code = "shader_type canvas_item;


// DistortionUVAnimated

vec2 d1stort1onUVAnimatedFunc(vec2 _uv_d1st, float _d1stX_d1st, float _d1stY_d1st, float _waveX_d1st, float _waveY_d1st, float _spd_d1st, float _t1me_d1st){
	_uv_d1st.x += sin(_uv_d1st.y * _waveX_d1st + _t1me_d1st * _spd_d1st) * _d1stX_d1st;
	_uv_d1st.y += sin(_uv_d1st.x * _waveY_d1st + _t1me_d1st * _spd_d1st) * _d1stY_d1st;
	return _uv_d1st;
}


void vertex() {
// Output:0

}

void fragment() {
// Input:4
	float n_out4p0 = TIME;

// DistortionUVAnimated:3
	float n_in3p1 = 10.00000;
	float n_in3p2 = 0.00000;
	float n_in3p3 = 0.02000;
	float n_in3p4 = 0.00000;
	float n_in3p5 = 1.00000;
	vec3 n_out3p0;
	{
		n_out3p0.xy = d1stort1onUVAnimatedFunc(UV.xy, n_in3p3, n_in3p4, n_in3p1, n_in3p2, n_in3p5, n_out4p0);
	}

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out3p0.xy);
		n_out2p0 = _tex_read.rgb;
		n_out2p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -166, 119 )
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource( 5 )
nodes/fragment/2/position = Vector2( 160, 180 )
nodes/fragment/3/node = SubResource( 6 )
nodes/fragment/3/position = Vector2( -160, 140 )
nodes/fragment/4/node = SubResource( 7 )
nodes/fragment/4/position = Vector2( -380, 280 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 0, 2, 0, 4, 0, 3, 6, 2, 1, 0, 1 )

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )

[sub_resource type="VisualShaderNodeTexture" id=10]
source = 2
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeCustom" id=11]
default_input_values = [ 1, 5, 2, 0, 3, 0.01, 4, 0, 5, 1, 6, 0 ]
script = ExtResource( 7 )

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "uv"

[sub_resource type="VisualShader" id=13]
code = "shader_type canvas_item;


// DistortionUVAnimated

vec2 d1stort1onUVAnimatedFunc(vec2 _uv_d1st, float _d1stX_d1st, float _d1stY_d1st, float _waveX_d1st, float _waveY_d1st, float _spd_d1st, float _t1me_d1st){
	_uv_d1st.x += sin(_uv_d1st.y * _waveX_d1st + _t1me_d1st * _spd_d1st) * _d1stX_d1st;
	_uv_d1st.y += sin(_uv_d1st.x * _waveY_d1st + _t1me_d1st * _spd_d1st) * _d1stY_d1st;
	return _uv_d1st;
}


void vertex() {
// Output:0

}

void fragment() {
// Input:5
	vec3 n_out5p0 = vec3(UV, 0.0);

// Input:4
	float n_out4p0 = TIME;

// DistortionUVAnimated:3
	float n_in3p1 = 5.00000;
	float n_in3p2 = 0.00000;
	float n_in3p3 = 0.01000;
	float n_in3p4 = 0.00000;
	float n_in3p5 = 1.00000;
	vec3 n_out3p0;
	{
		n_out3p0.xy = d1stort1onUVAnimatedFunc(n_out5p0.xy, n_in3p3, n_in3p4, n_in3p1, n_in3p2, n_in3p5, n_out4p0);
	}

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out3p0.xy);
		n_out2p0 = _tex_read.rgb;
		n_out2p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -282, 76 )
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( 120, 180 )
nodes/fragment/3/node = SubResource( 11 )
nodes/fragment/3/position = Vector2( -155, 166 )
nodes/fragment/4/node = SubResource( 12 )
nodes/fragment/4/position = Vector2( -420, 320 )
nodes/fragment/5/node = SubResource( 17 )
nodes/fragment/5/position = Vector2( -380, 120 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 1, 0, 1, 3, 0, 2, 0, 4, 0, 3, 6, 5, 0, 3, 0 )

[sub_resource type="ShaderMaterial" id=14]
shader = SubResource( 13 )

[node name="PLAYER" type="KinematicBody"]
script = ExtResource( 1 )

[node name="COL_SHAPE" type="CollisionShape" parent="."]
shape = SubResource( 1 )

[node name="CAMERA" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 10 )
environment = SubResource( 2 )

[node name="GFX_PLACEHOLDER" type="CSGBox" parent="."]

[node name="PULSE_HUD" type="Container" parent="."]
margin_top = 0.487337
margin_bottom = 0.487337
script = ExtResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PULSE_3" type="TextureRect" parent="PULSE_HUD"]
texture = ExtResource( 4 )
stretch_mode = 4

[node name="PULSE_2" type="TextureRect" parent="PULSE_HUD"]
texture = ExtResource( 2 )

[node name="PULSE_1" type="TextureRect" parent="PULSE_HUD"]
material = SubResource( 16 )
margin_right = 185.0
margin_bottom = 90.0
size_flags_horizontal = 3
size_flags_vertical = 3
size_flags_stretch_ratio = 0.0
texture = ExtResource( 3 )

[node name="REALITY_HUD" type="Control" parent="."]
margin_right = 426.0
margin_bottom = 240.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RELAXED_3" type="TextureRect" parent="REALITY_HUD"]
material = SubResource( 19 )
texture = ExtResource( 10 )

[node name="RELAXED_2" type="TextureRect" parent="REALITY_HUD"]
material = SubResource( 9 )
texture = ExtResource( 9 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RELAXED_1" type="TextureRect" parent="REALITY_HUD"]
pause_mode = 2
material = SubResource( 14 )
texture = ExtResource( 8 )
stretch_mode = 3

[node name="HUD" type="Container" parent="."]
anchor_top = 0.00350374
anchor_bottom = 0.00350558
margin_top = -0.353561
margin_right = 426.0
margin_bottom = 239.646
rect_min_size = Vector2( 426, 240 )
script = ExtResource( 6 )
__meta__ = {
"_edit_use_anchors_": false
}
